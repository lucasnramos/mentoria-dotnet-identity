name: Build and Deploy to GKE

# Trigger on pushes to master and manual runs
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  IMAGE_NAME: identity-api
  GKE_LOCATION: ${{ secrets.GKE_ZONE }}
  ARTIFACT_REGISTRY_LOCATION: southamerica-east1
  ARTIFACT_REGISTRY_REPOSITORY: identity-repo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP (service account key)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud project
        run: |
          set -e
          # Set the project for subsequent gcloud commands
          gcloud config set project "${{ secrets.GCP_PROJECT_ID }}"

      - name: Configure docker to authenticate with Artifact Registry
        run: |
          set -eux
          # Configure docker credential helper for Artifact Registry domain
          gcloud auth configure-docker "${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev" --quiet

      - name: Build and push Docker image to Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Get GKE credentials
        run: |
          set -e
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ env.GKE_LOCATION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE (apply manifests & update image)
        run: |
          # ensure k8s manifests exist at k8s/deployment.yaml and k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml -f k8s/service.yaml || true
          kubectl set image deployment/identity-api identity-api=${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --record
          kubectl rollout status deployment/identity-api --timeout=120s

      - name: Output service info
        run: kubectl get svc identity-api -o wide