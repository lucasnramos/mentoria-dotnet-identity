name: Build and Deploy to GKE

# Trigger on pushes to master and manual runs
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  IMAGE_NAME: identity-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP (service account key)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud project & debug auth
        run: |
          set -eux
          # Set the project for subsequent gcloud commands
          gcloud config set project "${{ secrets.GCP_PROJECT_ID }}"
          # Debug info: who is authenticated and current config
          gcloud --version
          gcloud auth list
          gcloud config list

      - name: Configure docker to authenticate with GCR
        run: |
          set -eux
          gcloud auth configure-docker --quiet

      - name: Pre-build debug
        run: |
          set -eux
          echo "--- gcloud auth list ---"
          gcloud auth list
          echo "--- gcloud config get-value project ---"
          gcloud config get-value project
          echo "--- docker info (client) ---"
          docker --version || true
          # show docker credential helpers (non-sensitive)
          jq -r '.credsStore // .auths' ~/.docker/config.json || true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ secrets.GKE_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE (apply manifests & update image)
        run: |
          # ensure k8s manifests exist at k8s/deployment.yaml and k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml -f k8s/service.yaml || true
          kubectl set image deployment/identity-api identity-api=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --record
          kubectl rollout status deployment/identity-api --timeout=120s

      - name: Output service info
        run: kubectl get svc identity-api -o wide

# Required repository secrets:
# - GCP_SA_KEY (service account JSON)
# - GCP_PROJECT_ID
# - GKE_CLUSTER
# - GKE_ZONE
